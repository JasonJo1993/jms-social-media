version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point

    branches:
      only:
        - master

    working_directory: ~/jms-social-media # directory where steps will run

    docker: # run the steps with Docker
      - image: circleci/openjdk:11-jdk-stretch # ...with this image as the primary container; this is where all `steps` will run

    steps: # a collection of executable commands

      - checkout # check out source code to working directory

      - restore_cache: # restore the saved cache after the first run or if `build.gradle` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: gradle-cache-{{ checksum "build.gradle" }}-{{ checksum "api/build.gradle" }}-{{ checksum "core/build.gradle" }}

      - run: gradle check # run the actual tests

      - save_cache: # saves the project dependencies
          paths:
            - ~/.gradle/cache
          key: gradle-cache-{{ checksum "build.gradle" }}-{{ checksum "api/build.gradle" }}-{{ checksum "core/build.gradle" }}

      - store_test_results: # uploads the test metadata from the `api/build/test-results/test` directory so that it can show up in the CircleCI dashboard.
      # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: api/build/test-results/test
