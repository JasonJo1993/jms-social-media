<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jms.socialmedia.mybatis.CreateTablesMapper">

	<insert id="createUsersTable" databaseId="mysql">
		CREATE TABLE IF NOT EXISTS users (
		user_id INT NOT NULL AUTO_INCREMENT,
		username VARCHAR(16) NOT NULL UNIQUE,
		hashed_password BINARY(60) NOT NULL,
		full_name VARCHAR(64) NOT NULL,
		email VARCHAR(64) NOT NULL UNIQUE,
		bio VARCHAR(512),
		birth_date DATE,
		date_time_joined TIMESTAMP NOT NULL,
		profile_picture_link VARCHAR(256),
		time_of_last_activity TIMESTAMP,
		PRIMARY KEY (user_id)
		)
	</insert>

	<insert id="createUsersTable" databaseId="h2">
		CREATE TABLE IF NOT EXISTS users (
		user_id INT NOT NULL AUTO_INCREMENT,
		username VARCHAR(16) NOT NULL UNIQUE,
		hashed_password VARCHAR(73) NOT NULL,
		full_name VARCHAR(64) NOT NULL,
		email VARCHAR(64) NOT NULL UNIQUE,
		bio VARCHAR(512),
		birth_date DATE,
		date_time_joined TIMESTAMP NOT NULL,
		profile_picture_link VARCHAR(256),
		time_of_last_activity TIMESTAMP,
		PRIMARY KEY (user_id)
		)
	</insert>

	<insert id="createPostsTable">
		CREATE TABLE IF NOT EXISTS posts (
		post_id INT NOT NULL AUTO_INCREMENT,
		user_id INT NOT NULL,
		text VARCHAR(512) NOT NULL,
		timestamp TIMESTAMP NOT NULL,
		PRIMARY KEY (post_id),
		CONSTRAINT fk_posts_users_user_id FOREIGN KEY (user_id) REFERENCES
		users(user_id) ON DELETE CASCADE
		)
	</insert>

	<insert id="createCommentsTable">
		CREATE TABLE IF NOT EXISTS comments (
		comment_id INT NOT NULL AUTO_INCREMENT,
		post_id INT NOT NULL,
		user_id INT NOT NULL,
		text VARCHAR(512) NOT NULL,
		timestamp TIMESTAMP NOT NULL,
		PRIMARY KEY (comment_id),
		CONSTRAINT fk_comments_users_user_id FOREIGN KEY (user_id) REFERENCES
		users(user_id) ON DELETE CASCADE,
		CONSTRAINT fk_comments_posts_post_id FOREIGN KEY (post_id) REFERENCES
		posts(post_id) ON DELETE CASCADE
		)
	</insert>

	<insert id="createUserSessionsTable">
		CREATE TABLE IF NOT EXISTS user_sessions (
		user_id INT NOT NULL,
		session_key VARCHAR(36) NOT NULL,
		timestamp TIMESTAMP NOT NULL,
		PRIMARY KEY (session_key),
		CONSTRAINT fk_user_sessions_user_id FOREIGN KEY (user_id) REFERENCES
		users(user_id) ON DELETE CASCADE
		)
	</insert>

	<insert id="createFollowersTable">
		CREATE TABLE IF NOT EXISTS followers (
		follower_user_id INT NOT NULL,
		following_user_id INT NOT NULL,
		timestamp TIMESTAMP NOT NULL,
		PRIMARY KEY (follower_user_id, following_user_id),
		CONSTRAINT fk_follower_user_id FOREIGN KEY (follower_user_id) REFERENCES
		users(user_id) ON DELETE CASCADE,
		CONSTRAINT fk_following_user_id FOREIGN KEY (following_user_id) REFERENCES
		users(user_id) ON DELETE CASCADE
		)
	</insert>

	<insert id="createPostTagsTable">
		CREATE TABLE IF NOT EXISTS post_tags (
		post_id INT NOT NULL,
		tag VARCHAR(64) NOT NULL,
		PRIMARY KEY (post_id, tag),
		CONSTRAINT fk_post_tags_post_id FOREIGN KEY (post_id) REFERENCES posts(post_id)
		ON DELETE CASCADE
		)
	</insert>

	<insert id="createPostLikesTable">
		CREATE TABLE IF NOT EXISTS post_likes (
		post_id INT NOT NULL,
		user_id INT NOT NULL,
		timestamp TIMESTAMP NOT NULL,
		PRIMARY KEY (post_id, user_id),
		CONSTRAINT fk_post_likes_post_id FOREIGN KEY (post_id) REFERENCES posts(post_id)
		ON DELETE CASCADE,
		CONSTRAINT fk_post_likes_user_id FOREIGN KEY (user_id) REFERENCES users(user_id)
		ON DELETE CASCADE
		)
	</insert>

	<insert id="createCommentLikesTable">
		CREATE TABLE IF NOT EXISTS comment_likes (
		comment_id INT NOT NULL,
		user_id INT NOT NULL,
		timestamp TIMESTAMP NOT NULL,
		PRIMARY KEY (comment_id, user_id),
		CONSTRAINT fk_comment_likes_comment_id FOREIGN KEY (comment_id) REFERENCES
		comments(comment_id) ON DELETE CASCADE,
		CONSTRAINT fk_comment_likes_user_id FOREIGN KEY (user_id) REFERENCES
		users(user_id) ON DELETE CASCADE
		)
	</insert>

	<insert id="createPostMentionsTable">
		CREATE TABLE IF NOT EXISTS post_mentions (
		post_id INT NOT NULL,
		user_id INT NOT NULL,
		PRIMARY KEY (post_id, user_id),
		CONSTRAINT fk_post_mentions_post_id FOREIGN KEY (post_id) REFERENCES
		posts(post_id) ON DELETE CASCADE,
		CONSTRAINT fk_post_mentions_user_id FOREIGN KEY (user_id) REFERENCES
		users(user_id) ON DELETE CASCADE
		)
	</insert>

	<insert id="createCommentMentionsTable">
		CREATE TABLE IF NOT EXISTS comment_mentions (
		comment_id INT NOT NULL,
		user_id INT NOT NULL,
		PRIMARY KEY (comment_id, user_id),
		CONSTRAINT fk_comment_mentions_comment_id FOREIGN KEY (comment_id) REFERENCES
		comments(comment_id) ON DELETE CASCADE,
		CONSTRAINT fk_comment_mentions_user_id FOREIGN KEY (user_id) REFERENCES
		users(user_id) ON DELETE CASCADE
		)
	</insert>
</mapper>