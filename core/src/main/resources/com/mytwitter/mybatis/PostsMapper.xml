<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mytwitter.mybatis.PostsMapper">
    
    <sql id="retrievePosts">
		select posts.post_id as post_id, posts.user_id as user_id, full_name, username, 
        profile_picture_link, text, reply_of_post_id, link_to_video, post_timestamp
        from posts, users    
    </sql>
    
    <select id="getNumberOfPosts" resultType="int">
        select count(1) from posts
    </select>
    
    <select id="getPost" parameterType="int" resultType="post">
        <include refid="retrievePosts"></include>
        where post_id = #{id} and posts.user_id = users.user_id
    </select>
    
    <select id="getPosts" resultType="post">
        <include refid="retrievePosts"></include>
        
        <if test="tag != null">
        , posts_tags
        </if>
        
        WHERE reply_of_post_id IS NULL AND posts.user_id = users.user_id
        
        <if test="userId != 0">
        	AND posts.user_id = #{userId}
        </if>
        <if test="username != null">
        	AND username = #{username}
        </if>
        <if test="tag != null">
        	AND posts.post_id = posts_tags.post_id AND posts_tags.tag = #{tag}
        </if>
        <if test="onDate != null">
        	AND TO_CHAR(post_timestamp, 'MM-DD-YYYY') = #{onDate}
        </if>
        <if test="beforeDate != null">
        	AND (TO_DATE(#{beforeDate}, 'MM-DD-YYYY') + INTERVAL '1' DAY) >= post_timestamp
        </if>
        <if test="afterDate != null">
        	AND post_timestamp >= TO_DATE(#{afterDate}, 'MM-DD-YYYY') 
        </if>
        order by post_timestamp desc
    </select>
    
    <select id="getReplies" parameterType="int" resultType="post">
        <include refid="retrievePosts"></include>
        where reply_of_post_id = #{id} and posts.user_id = users.user_id
        order by post_timestamp desc
    </select>
    
    <insert id="addPost" parameterType="post" keyColumn="post_id">
    	<selectKey keyProperty="postId" resultType="int" order="BEFORE">
    		select POSTS_SEQ.nextval as postId from DUAL
    	</selectKey>
        insert into posts (post_id, user_id, text, reply_of_post_id, link_to_video, post_timestamp) values (
            #{postId}, #{userId}, #{text}, #{replyOfPostId}, #{linkToVideo}, systimestamp
        )
    </insert>
    

</mapper>